install.packages("ROAuth")
library(ROAuth)
install.packages("httr")
library(httr)
install.packages("httpuv")
library(httpuv)
myapp = oauth_app("github", key = "70a4f0ea9c2017f1de61", secret = "1f0229ce73fedd81d0b5f1935a0643cd2de4613a")
github_token = oauth2.0_token(oauth_endpoints("github"), myapp)
oauth_endpoints("github")
myapp <- oauth_app("github", key = "70a4f0ea9c2017f1de61", secret = "1f0229ce73fedd81d0b5f1935a0643cd2de4613a")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
library(ROAuth)
library(httr)
l
libra
library(httpuv)
oauth_endpoints("github")
myapp <- oauth_app("github", key = "70a4f0ea9c2017f1de61", secret = "1f0229ce73fedd81d0b5f1935a0643cd2de4613a")
github_token <- oauth2.0_token(oauth_endpoints("github", myapp)
github_token <- oauth2.0_token(oauth_endpoints("github"),myapp)
oauth_endpoint("github")
oauth_endpoints("github")
myapp <- oauth_app("github", key = "70a4f0ea9c2017f1de61", secret = "1f0229ce73fedd81d0b5f1935a0643cd2de4613a
")
github_token <- oauth1.0_token(oauth_endpoints("github", myapp)
github_token
myapp
oauth_endpoints("github")
myendpoint <= oauth_endpoints("github")
myendpoint = oauth_endpoints("github")
myapp
mytoken = oauth2.0_token(myendpoint, myapp)
q()
load("C:/Chand Sooran/Johns Hopkins/Getting and Cleaning Data/Course Project/.RData")
head(groupedSelectData,4)
View(selectData)
View(groupedSelectData)
View(testData)
names(groupedSelectData)
install.packages("swirl")
library(swirl)
install_from_swirl("Exploratory Data Analysis")
library(swirl)
swirl()
head(pollution,10)
head(pollution)
dim(pollution)
summary(pollution$pm25)
summary(ppm)
quantile(ppm)
boxplot(ppm)
boxplot(ppm, col=blue)
boxplot(ppm,col="blue")
abline(h=12)
hist(ppm, col="green")
rug(ppm)
rug(low)
low
high
hist(ppm, col="green", breaks=100)
rug(ppm)
hist(ppm, col="green")
abline(v=12,lwd=2)
abline(v=median(ppm), col="magenta", lwd = 4)
names(pollution)
table(pollution$region)
reg <- table(pollution$region)
reg
barplot(reg,col="wheat", main="Number of Counties in Each Region")
boxplot(pm25 ~ region, data = pollution, col="red")
par(mfrow=c(2,1), mar = c(4,4,2,1))
east <- subset(pollution, region == "east")
head(east)
hist(east$pm25, col="green")
hist(subset(pollution, region == "west")$pm25, col="green")
info()
skip()
abline(h=12)
abline(h=12, lwd=2, lty=2)
plot(pollution$latitude, ppm, col=pollution$region)
abline(h=12, lwd=2,lty=2)
par(mfrow=c(1,2), mar=c(5,4,2,1))
west <- subset(pollution, region == "west")
plot(west$latitude, west$pm25, main = "west")
plot(west$latitude, west$pm25, main = "west")
plot(west$latitude, west$pm25, main = "west")
plot(west$latitude, west$pm25, main = "west")
skip()
plot(east$latitude, east$pm25, main = "east")
skip()
?Devices
names(faithful)
plot(eruptions, waiting)
plot(faithful$eruptions, faithful$waiting)
with(faithful, plot(eruptions, waiting))
title(main="Old Faithful Geyser Data")
title(main = "Old Faithful Geyser Data")
skip()
dev.cur()
pdf(file = "myplot.pdf")
with(faithful, plot(eruptions, waiting))
title(main = "Old Faithful Geyser data")
dev.cur()
dev.off()
dev.cur()
with(faithful, plot(eruptions, waiting))
title(main="Old Faithful Geyser Data")
title(main = "Old Faithful Geyser data")
dev.copy(png, file = "geyserplot.png")
dev.off()
head(cars)
with(cars,plot(speed, dist))
text(mean(cars$speed), max(cars$dist), "SWIRL rules!")
head(state)
table(state$region)
xyplot(Life.Exp ~ Income | region, data = state, layout = c(4,1))
xyplot(Life.Exp ~ Income | region, data = state, layout = c(2,2))
head(mpg)
dim(mpg)
table(mpg$model)
qplot(displ, hwy, data = mpg)
head(airquality)
range(airquality$ozone, na.rm = TRUE)
range(airquality$Ozone, na.rm = TRUE)
hist(airquality$Ozone)
table(airquality$Month)
boxplot(Ozone ~ Month, airquality)
boxplot(Ozone ~ Month, airquality, xlab = "Month", ylab = "Ozone (ppb)", col.axis = "blue", col.lab = "red")
title(main = "Ozone and Wind in New York City")
with(airquality, plot(Wind, Ozone))
title(main = "Ozone and Wind in New York City")
length(par())
names(par())
par()$pin
par("fg")
par("pch")
par("lty")
plot(airquality$Wind, airquality$Ozone, type = "n")
title(main = "Wind and Ozone in NYC")
may <- subset(airquality, Month == 5)
info()
play()
?points
pch = 0:18
nxt()
info()
play(0)
play()
?col
nxt()
points(airquality$Wind, airquality$Ozone, pch = 2, col = "blue", bg = "blue")
points(airquality$Wind, airquality$Ozone, col = "blue", pch = 17)
points(may$Wind, may$Ozone, col = blue, pch = 17)
point(may$Wind, may$Ozone, col = "blue", pch = 17)
points(may$Wind, may$Ozone, col = "blue", pch = 17)
notmay <- subset(airquality, month <> 5)
notmay <- subset(airquality, month != 5)
notmay <- subset(airquality, Month != 5)
points(notmay$Wind, notmay$Ozone, col = "red", pch = 8)
legend(topright, pch = c(17,8), col = c("blue","red"), legend = c("May","Other Months")
)
legend("topright", pch = c(17,8), col = c("blue","red"), legend = c("May", "Other Months"))
abline(v=median(airquality$Wind), lty=2, lwd = 2)
par(mfrow = c(1,2))
plot(airquality$Wind, airquality$Ozone, main = "Ozone and Wind")
plot(airquality$Wind,airquality$Solar.R, main = "Ozone and Solar Radiation")
par(mfrow = c(1,3), mar = c(4,4,2,1), oma = c(0,0,2,0))
plot(airquality$Wind, airquality$Ozone, title(main = "Ozone and Wind"))
plot(airquality$Wind, airquality$Ozone, main = "Ozone and Wind")
plot(airquality$Solar.R, airquality$Ozone, main = "Ozone and Solar Radiation")
plot(airquality$Temp, airquality$Ozone, main = "Ozone and Temperature")
mtext("Ozone and Weather in New York City", outer = TRUE)
head(airquality)
xyplot(Ozone ~ Wind, data  = airquality)
xyplot(Ozone ~ Wind, data = airquality, col = "red", pch = 8, main = "Big Apple Data")
xyplot(Ozone ~ Wind | as.factor(Month), data = airquality, layout = c(5,1))
xyplot(Ozone ~ Wind | Month, data = airquality, layout = c(5,1))
p <- xyplot(Ozone ~ Wind, data = airquality)
prin
print(p)
names(p)
mynames[myfull]
p[["formula"]]
p[["x.limits"]]
table(f)
xyplot(y ~ x | f, layout = c(2,1))
v1
v2
myedit("plot1.R")
source("plot1.R", local = TRUE)
source('~/R/win-library/3.2/swirl/Courses/Exploratory_Data_Analysis/Lattice_Plotting_System/plot1.R')
source(pathtofile("plot1.R"), local = TRUE)
myedit("plot2.R")
source(pathtofile("plot2.R"), local = TRUE)
str(diamonds)
table(diamonds$color)
table(diamonds$color, diamonds$cut)
myedit("myLabels.R")
source(pathtofile("myLabels.R"), local = TRUE)
xyplot(price ~ carat | color*cut, data = diamonds, strip = FALSE, pch = 20, xlab = myxlab, ylab = myylab, main = mymain)
xyplot(price ~ carat | color*cut, data = diamonds, pch = 20, xlab = myxlab, ylab = myylab, main = mymain)
swirl()
install.packages(swirl)
install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
library(swirl)
ls()
rm(ls())
rm(list=ls())
swirl()
install_from_swirl("Exploratory Data Analysis")
swirl()
sample(colors(),10)
pal <- colorRamp(c("red","blue"))
pal(0)
pal(1)
pal(seq(0,1,len=6))
swirl()
install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
library(swirl)
swirl()
install_from_swirl("Exploratory Data Analysis")
library(swirl)
swirl()
swirl()
str(mpg)
qplot(displ, hwy, mpg)
qplot(mpg$displ, mpg$hwy, mpg)
qplot(displ, hwy, data = mpg)
qplot(displ, hwy, data = mpg, color = drive)
qplot(displ, hwy, data = mpg, color = drv)
qplot(displ, hwy, data = mpg, color = drv, geom = c("point", "smooth"))
qplot(y=hwy, data = mpg, color - drv)
qplot(y=hwy, data=mpg, color=drv)
myhigh
qplot(color = drv, y = hwy, data = mpg, geom = "boxplot")
qplot(color = drv, hwy, data = mpg, geom = "boxplot")
qplot(drv, hwy, data = mpg, geom = "boxplot")
qplot(drv, hwy, data = mpg, geom = "boxplot", color = manufacturer)
qplot(hwy, data = mpg, fill = drv)
qplot(displ, hwy, data mpg, facets = . ~ drv)
qplot(displ, hwy, data = mpg, facets = . ~ drv)
qplot(hwy, data = mpg, facets = drv ~ ., binwidth = 2)
qplot(displ, hwy, data = mpg, geom = c("point","smooth"), facets = . ~ drv, method = "loess")
g <- ggplot(mpg, aes(displ, hwy))
summary(g)
g+geom_point()
g+geom_point()+geom_smooth()
g+geom_point()+geom_smooth("lm")
g+geom_point()+geom_smooth(method = "lm")
g+geom_point()+geom_smooth(method = "lm")+facet_grid(. ~ drv)
g+geom_point()+geom_smooth(method = "lm")+facet_grid(. ~ drv)+ggtile("Swirl Rules")
g+geom_point()+geom_smooth(method = "lm")+facet_grid(. ~ drv)+ggtitle("Swirl Rules")
g+geom_point()+geom_smooth(method = "lm")+facet_grid(. ~ drv)+ggtitle("Swirl Rules!")
g+geom_point(color = "pink", size = 4, alpha = 1/2)
g+geom_point(size = 4, alpha = 1/2, aes(color = drv))
g+geom_point(aes(color = drv))+labs(title = "Swirl Rules!")+labs(x = "Displacement", y = "Hwy Mileage")
g+geom_point(aes(color = drv), size = 2, alpha = 1/2)+geom_smooth(size = 4, linetype = 3, method = "lm", se = FALSE)
g+geom_point(aes(color = drv))+theme_bw(base_family = "Times")
plot(myx, myy, type = "l", ylim = c(-3,3))
g <- ggplot(myx, myy, aes(x = myx, y = myy))
g <- ggplot(myx,myy)+aes(x=myx, y = myy)
g <- ggplot(testdat,aes(x=myx, y=myy))
g+geom_line()
g+geom_line(ylim = c(-3,3))
g+geom_line()+ylim(-3,3)
g+geom_line()+coord_cartesian(ylim=c(-3,3))
g <- ggplot(mpg, aes(x = displ, y = hwy, color = year))
g <- ggplot(mpg, aes(x=displ, y=hwy, color=factor(year)))
g+geom_point()
g+geom_point()+facet_grid(drv ~ cyl, margins = TRUE)
g+geom_point()+facet_grid(drv ~ cyl, margins = TRUE)+geom_smooth(method = "lm", se = FALSE, size = 2, color = "black")
g+geom_point()+facet_grid(drv ~ cyl, margins = TRUE)+geom_smooth(method = "lm", se = FALSE, size = 2, color = "black")+labs(x="Displacement",y = "Highway Mileage", title = "Swirl Rules!")
str(diamonds)
qplot(price, data = diamonds)
range(diamonds$price)
qplot(price, data = diamonds, binwidth  = 18497/30)
brk
counts
qplot(price, data = diamonds, binwidth  = 18497/30, fill = cut)
qplot(price, data = diamonds, geom = "density")
qplot(price, data = diamonds, geom = "density", color = cut)
qplot(carat, price, data = diamonds)
qplot(carat, price, data = diamonds, shape = cut)
qplot(carat, price, data = diamonds, color = cut)
qplot(carat, price, data = diamonds, color = cut, geom = c("point","smooth"))
qplot(carat, price, data = diamonds, color = cut, geom = c("point","smooth"), method = "lm")
qplot(carat, price, data = diamonds, color = cut, geom = c("point","smooth"), method = "lm", facets = . ~ cut)
g <- ggplot(data = diamonds, aes(depth, price))
g
summary(g)
g+geom_point(alpha = 1/3)
cutpoints <- quantile(diamonds$carat, seq(0, 1, length = 4), na.rm = TRUE)
cutpoints
diamonds$car2 <- cut(diamonds$carat, cutpoints)
g <- ggplot(data = diamonds, aes(depth, price))
g+geom_point(alpha = 1/3)+facet_grid(cut ~ car2)
diamonds[myd,]
g+geom_point(alpha = 1/3)+facet_grid(cut ~ car2)+geom_smoot(method = "lm", size = 3, color = "pink")
g+geom_point(alpha = 1/3)+facet_grid(cut ~ car2)+geom_smooth(method = "lm", size = 3, color = "pink")
ggplot(diamonds, aes(carat,price))+geom_boxplot()+facet_grid(. ~ cut)
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, Bodyweight)
xyplot(weight ~ Time | Diet, Bodyweight)
str(Bodyweight)
str(bodyweight)
str(Diet)
xyplot(weight ~ Time | Diet, Bodyweight)
install.packages("nlme")
install.packages("nlme")
install.packages("lattice")
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, Bodyweight)
Diet
str(Bodyweight)
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, Bodyweight)
install.packages("nlme")
install.packages("lattice")
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, Bodyweight)
xyplot(weight ~ Time | Diet, BodyWeight)
str(BodyWeight)
?panel.lmline
?text
?axis
library(lattice)
library(datasets)
data(airquality)
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
?par
?trellis.par.set
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
library(lattice)
?qplot
install.packages("lattice")
install.packages("lattice")
install.packages("lattice")
install.packages("nlme")
install.packages("lattice")
library(nlme)
library(lattice)
library(datasets)
data(airquality)
str(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
install.packages("ggplot2")
library(ggplot2)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
str(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
library(ggplot2)
g <- ggplot(movies, aes(votes, rating))
print(g)
str(movies)
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies, panel = panel.loess)
qplot(votes, rating, data = movies) + geom_smooth()
install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
install.packages("knitr")
library(knitr)
source('C:/Chand Sooran/Johns Hopkins/Reproducible Research/Assignment 1/PA1.R')
getwd()
source('C:/Chand Sooran/Johns Hopkins/Reproducible Research/Assignment 1/PA1.R')
source('C:/Chand Sooran/Johns Hopkins/Reproducible Research/Assignment 1/PA1.R')
ls()
list.files()
source('C:/Chand Sooran/Johns Hopkins/Reproducible Research/Assignment 1/PA1.R')
source('C:/Chand Sooran/Johns Hopkins/Reproducible Research/Assignment 1/PA1.R')
list.files()
source('C:/Chand Sooran/Johns Hopkins/Reproducible Research/Assignment 1/PA1.R')
source('C:/Chand Sooran/Johns Hopkins/Reproducible Research/Assignment 1/PA1.R')
list.files()
file.remove("Assignment1.zip")
list.files()
source('C:/Chand Sooran/Johns Hopkins/Reproducible Research/Assignment 1/PA1.R')
source('C:/Chand Sooran/Johns Hopkins/Reproducible Research/Assignment 1/PA1.R')
summary(RawData)
str(RawData)
source('C:/Chand Sooran/Johns Hopkins/Reproducible Research/Assignment 1/PA1.R')
header(RawData, 6)
head(RawData,6)
head(RawData,10)
RawData[1,]
names(RawData)
RawData[(280:300),]
RawData[(285:295),]
RawData[1:100,]
RawData[10:20,]
RawData[20:30,]
unique(RawData$date)
length(unique(RawData$unique))
UniqueDays <- unique(RawData$date)
length(UniqueDays)
source('C:/Chand Sooran/Johns Hopkins/Reproducible Research/Assignment 1/PA1.R')
source('C:/Chand Sooran/Johns Hopkins/Reproducible Research/Assignment 1/PA1.R')
seq(from = 1, to = 288, by = 1)
source('C:/Chand Sooran/Johns Hopkins/Reproducible Research/Assignment 1/PA1.R')
source('C:/Chand Sooran/Johns Hopkins/Reproducible Research/Assignment 1/PA1.R')
source('C:/Chand Sooran/Johns Hopkins/Reproducible Research/Assignment 1/PA1.R')
source('C:/Chand Sooran/Johns Hopkins/Reproducible Research/Assignment 1/PA1.R')
as.null(NewInterval)
NewInterval <- NULL
for (i in 1:NumberOfDays){NewInterval <- rbind(NewInterval, IndexVector)}
length(NewInterval)
head(NewInterval)
dim(NewInterval)
NewInterval <- NULL
NewInterval <- IndexVector
NewInterval
NewInterval <- NULL
for (i in 1:NumberOfDays){NewInterval <- c(NewInterval,IndexVector)}
length(NewInterval)
head(NewInterval, 300)
source('C:/Chand Sooran/Johns Hopkins/Reproducible Research/Assignment 1/PA1.R')
class(RawData)
source('C:/Chand Sooran/Johns Hopkins/Reproducible Research/Assignment 1/PA1.R')
source('C:/Chand Sooran/Johns Hopkins/Reproducible Research/Assignment 1/PA1.R')
head(WithData)
names(WithData)
source('C:/Chand Sooran/Johns Hopkins/Reproducible Research/Assignment 1/PA1.R')
head(withData)
head(WithData)
source('C:/Chand Sooran/Johns Hopkins/Reproducible Research/Assignment 1/PA1.R')
class(WithData)
source('C:/Chand Sooran/Johns Hopkins/Reproducible Research/Assignment 1/PA1.R')
head(IntervalData)
source('C:/Chand Sooran/Johns Hopkins/Reproducible Research/Assignment 1/PA1.R')
dim(WithData)
head(WithData)
WithData[5000:5050,]
source('C:/Chand Sooran/Johns Hopkins/Reproducible Research/Assignment 1/PA1.R')
source('C:/Chand Sooran/Johns Hopkins/Reproducible Research/Assignment 1/PA1.R')
UniqueIgnoreDays
source('C:/Chand Sooran/Johns Hopkins/Reproducible Research/Assignment 1/PA1.R')
TotalDailySteps <- NULL
length(TotalDailySteps) <- NumberOfIgnoreDays
TotalDailySteps
length(TotalDailySteps)
UniqueIgnoreDays
source('C:/Chand Sooran/Johns Hopkins/Reproducible Research/Assignment 1/PA1.R')
IgnoreDailyTotalSteps
for (i in UniqueIgnoreDays){i}
for (i in UniqueIgnoreDays){print(i)}
IgnoreData$Date
head(IgnoreData$Date)
head(UniqueIgnoreDays)
class(IgnoreData$Date)
class(UniqueIgnoreDays)
head(IgnoreDailyFrame)
IgnoreDailyTotalSteps
sum(IgnoreDailyFrame$Steps)
source('C:/Chand Sooran/Johns Hopkins/Reproducible Research/Assignment 1/PA1.R')
IgnoreDailyTotalSteps
IgnoreTotalCount
IgnoreDailyFrame
source('C:/Chand Sooran/Johns Hopkins/Reproducible Research/Assignment 1/PA1.R')
IgnoreDailySteps
source('C:/Chand Sooran/Johns Hopkins/Reproducible Research/Assignment 1/PA1.R')
source('C:/Chand Sooran/Johns Hopkins/Reproducible Research/Assignment 1/PA1.R')
IgnoreDailyCount
source('C:/Chand Sooran/Johns Hopkins/Reproducible Research/Assignment 1/PA1.R')
IgnoreDailyCount
source('C:/Chand Sooran/Johns Hopkins/Reproducible Research/Assignment 1/PA1.R')
IgnoreDailyTotalSteps
source('C:/Chand Sooran/Johns Hopkins/Reproducible Research/Assignment 1/PA1.R')
IgnoreDailyTotalSteps
source('C:/Chand Sooran/Johns Hopkins/Reproducible Research/Assignment 1/PA1.R')
IgnoreDailySteps
IgnoreDailySteps
source('C:/Chand Sooran/Johns Hopkins/Reproducible Research/Assignment 1/PA1.R')
IgnoreDailySteps
IgnoreDailyCount
source('C:/Chand Sooran/Johns Hopkins/Reproducible Research/Assignment 1/PA1.R')
source('C:/Chand Sooran/Johns Hopkins/Reproducible Research/Assignment 1/PA1.R')
IgnoreDailyStepsVector
source('C:/Chand Sooran/Johns Hopkins/Reproducible Research/Assignment 1/PA1.R')
source('C:/Chand Sooran/Johns Hopkins/Reproducible Research/Assignment 1/PA1.R')
source('C:/Chand Sooran/Johns Hopkins/Reproducible Research/Assignment 1/PA1.R')
source('C:/Chand Sooran/Johns Hopkins/Reproducible Research/Assignment 1/PA1.R')
source('C:/Chand Sooran/Johns Hopkins/Reproducible Research/Assignment 1/PA1.R')
source('C:/Chand Sooran/Johns Hopkins/Reproducible Research/Assignment 1/PA1.R')
source('C:/Chand Sooran/Johns Hopkins/Reproducible Research/Assignment 1/PA1.R')
source('C:/Chand Sooran/Johns Hopkins/Reproducible Research/Assignment 1/PA1.R')
source('C:/Chand Sooran/Johns Hopkins/Reproducible Research/Assignment 1/PA1.R')
source('C:/Chand Sooran/Johns Hopkins/Reproducible Research/Assignment 1/PA1.R')
source('C:/Chand Sooran/Johns Hopkins/Reproducible Research/Assignment 1/PA1.R')
source('C:/Chand Sooran/Johns Hopkins/Reproducible Research/Assignment 1/PA1.R')
source('C:/Chand Sooran/Johns Hopkins/Reproducible Research/Assignment 1/PA1.R')
source('C:/Chand Sooran/Johns Hopkins/Reproducible Research/Assignment 1/PA1.R')
source('C:/Chand Sooran/Johns Hopkins/Reproducible Research/Assignment 1/PA1.R')
source('C:/Chand Sooran/Johns Hopkins/Reproducible Research/Assignment 1/PA1.R')
source('C:/Chand Sooran/Johns Hopkins/Reproducible Research/Assignment 1/PA1.R')
source('C:/Chand Sooran/Johns Hopkins/Reproducible Research/Assignment 1/PA1.R')
